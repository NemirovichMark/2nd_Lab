using System;


namespace laba2
{
    internal class Program
    {
        static void Main(string[] args)
        {

            Console.WriteLine($"Level 1");
            #region task 2
            {
                Console.WriteLine($"    Task 2");

                double x, y;

                while (true)
                {
                    Console.WriteLine($"    Please enter x: ");
                    if (!double.TryParse(Console.ReadLine(), out x))
                    {
                        Console.WriteLine($"    Wrong x, please try again");
                        continue;
                    }
                    Console.WriteLine($"    Please enter y: ");
                    if (!double.TryParse(Console.ReadLine(), out y))
                    {
                        Console.WriteLine($"    Wrong y, please try again");
                        continue;
                    }
                    break;
                }


                if (y >= 0 && Math.Abs(x) + y <= 1)
                {
                    Console.WriteLine($"    The point ({x};{y}) is inside the triangle");
                }
                else
                {
                    Console.WriteLine($"    The point ({x};{y}) is not inside the triangle");
                }
            }
            #endregion

            #region task 4
            {
                Console.WriteLine($"Task 4");

                double a, b, c;
                double uu, z;

                while (true)
                {
                    Console.WriteLine($"    Please enter a: ");
                    if (!double.TryParse(Console.ReadLine(), out a))
                    {
                        Console.WriteLine($"    Wrong a, please try again");
                        continue;
                    }
                    Console.WriteLine($"    Please enter b: ");
                    if (!double.TryParse(Console.ReadLine(), out b))
                    {
                        Console.WriteLine($"    Wrong b, please try again");
                        continue;
                    }
                    Console.WriteLine($"    Please enter c: ");
                    if (!double.TryParse(Console.ReadLine(), out c))
                    {
                        Console.WriteLine($"    Wrong c, please try again");
                        continue;
                    }
                    break;
                }

                uu = a;
                if (b < uu)
                {
                    uu = b;
                }

                z = c;
                if (uu > z)
                {
                    z = uu;
                }
                Console.WriteLine($"    z = {z}");
            }
            #endregion

            #region task 7
            {
                Console.WriteLine($"Task 7");

                double x, y;

                while (true)
                {
                    Console.WriteLine($"    Please enter x: ");
                    if (!double.TryParse(Console.ReadLine(), out x))
                    {
                        Console.WriteLine($"    Wrong x, please try again");
                        continue;
                    }
                    break;
                }

                x = Math.Abs(x);

                y = x;
                if (x > 1)
                {
                    y = 1;
                }
                Console.WriteLine($"    y = {y}");
            }

            #endregion


            Console.WriteLine($"Level 2");

            #region task 1
            Console.WriteLine($"Task 1");
            {
                double s = 0.0;
                double height;
                int n;

                while (true)
                {
                    Console.WriteLine($"    Please enter the number of students (n): ");
                    if (!int.TryParse(Console.ReadLine(), out n))
                    {
                        Console.WriteLine($"    Wrong n, please try again");
                        continue;
                    }
                    if (n <= 0)
                    {
                        Console.WriteLine($"    n must be positive");
                        continue;
                    }
                    break;
                }

                for (int i = 1; i <= n; i++)
                {
                    Console.WriteLine($"Please enter the height of the {i} student in centimeteres.");
                    if (!double.TryParse(Console.ReadLine(), out height))
                    {
                        Console.WriteLine($"Incorrect format");
                        return;
                    }
                    if (height <= 0)
                    {
                        Console.WriteLine($"Height must be positive.");
                        return;
                    }
                    s += height;
                }

                double average = s / n;
                Console.WriteLine($"    Average height: {average}");
            }
            #endregion

            #region task 9
            Console.WriteLine($"Task 9");
            {
                double result, best = double.PositiveInfinity;
                int n;

                while (true)
                {
                    Console.WriteLine($"    Please enter the number (n) of sportsmen");
                    if (!int.TryParse(Console.ReadLine(), out n))
                    {
                        Console.WriteLine($"    Wrong n, please try again");
                        continue;
                    }
                    if (n <= 0)
                    {
                        Console.WriteLine($"    n must be positive");
                        continue;
                    }
                    break;
                }

                for (int i = 1; i <= n; i++)
                {
                    Console.WriteLine($"Please enter result of {i} sportsman:");

                    if (!double.TryParse(Console.ReadLine(), out result))
                    {
                        Console.WriteLine($"Incorrect format");
                        return;
                    }
                    if (result <= 0)
                    {
                        Console.WriteLine($"result must be positive");
                        return;
                    }

                    best = Math.Min(best, result);
                }
                Console.WriteLine($"    The best result: {best}");

            }

            #endregion


            Console.WriteLine($"Level 3");

            #region task 4
            Console.WriteLine($"Task 4");
            {
                double r1, r2;
                double distance;
                int n = 1, counter = 0;
                double x, y;

                while (true)
                {
                    Console.WriteLine($"    Please enter r1: ");
                    if (!double.TryParse(Console.ReadLine(), out r1))
                    {
                        Console.WriteLine($"    wrong r1, please try again");
                        continue;
                    }
                    if (r1 <= 0)
                    {
                        Console.WriteLine($"    r1 must be positive");
                        continue;
                    }
                    break;
                }

                while (true)
                {
                    Console.WriteLine($"    Please enter r2: ");
                    if (!double.TryParse(Console.ReadLine(), out r2))
                    {
                        Console.WriteLine($"    wrong r2, please try again");
                        continue;
                    }
                    if (r2 <= 0)
                    {
                        Console.WriteLine($"    r2 must be positive");
                        continue;
                    }
                    if (r2 < r1)
                    {
                        Console.WriteLine($"    r2 must be greater than r1, try again");
                    }
                    break;
                }

                Console.WriteLine($"    if input data is all fed, write '-1'");
                while (true)
                {
                    Console.WriteLine($"    Enter coordinates number {n}");
                    Console.Write($"    x: ");

                    if (!double.TryParse(Console.ReadLine(), out x))
                    {
                        Console.WriteLine($"    incorrect format");
                        return;
                    }
                    if (x == -1)
                    {
                        break;
                    }

                    Console.Write($"    y: ");
                    if (!double.TryParse(Console.ReadLine(), out y))
                    {
                        Console.WriteLine($"    incorrect format");
                        return;
                    }

                    distance = x * x + y * y;

                    if (distance <= r2 * r2 && distance >= r1 * r1)
                    {
                        counter++;
                    }
                    n++;

                }
                Console.WriteLine($"    Points in a ring: {counter}");

            }
            #endregion

            #region task 11
            Console.WriteLine($"Task 11");
            {
                int mark;
                double marksSum = 0;
                double avgMarksSum = 0;
                double groupAverageMark;
                int badStudentsCount = 0;
                bool continueInput = true;
                bool hasBadGrade = false;

                int n = 0;

                Console.WriteLine("Write -1 to stop.");

                for (; continueInput; n++)
                {
                    Console.WriteLine($"\nEnter {n + 1} student marks:");

                    marksSum = 0;

                    for (int i = 1; i <= 4; i++)
                    {
                        Console.Write($"   Mark #{i}: ");
                        string input = Console.ReadLine();

                        if (input == "-1")
                        {
                            continueInput = false;
                            break;
                        }

                        if (!int.TryParse(input, out mark))
                        {
                            Console.WriteLine("Value has an incorrect format!");
                            return;
                        }

                        if (mark < 2 || mark > 5)
                        {
                            Console.WriteLine("Mark value must be between 2 and 5");
                            return;
                        }

                        if (mark == 2)
                        {
                            hasBadGrade = true;
                            continue;
                        }


                        marksSum += mark;
                    }

                    if (!continueInput)
                        break;

                    if (hasBadGrade)
                        badStudentsCount++;

                    avgMarksSum += marksSum / 4;
                }

                if (n == 0)
                    groupAverageMark = 0;
                else
                    groupAverageMark = avgMarksSum / n;

                Console.WriteLine($"\nBad students count: {badStudentsCount}");
                Console.WriteLine($"Group average mark: {Math.Round(groupAverageMark, 3)}");

                #endregion

                #region task 12
                Console.WriteLine($"Task 12");
                {
                    double r;
                    int choice;

                    while (true)
                    {
                        while (true)
                        {
                            Console.WriteLine($"    Please enter r: ");
                            if (!double.TryParse(Console.ReadLine(), out r))
                            {
                                Console.WriteLine($"    Wrong r, try again");
                                continue;
                            }
                            if (r <= 0)
                            {
                                Console.WriteLine($"    r must be positive");
                            }
                            break;
                        }

                        Console.WriteLine($"    1 - Area of a square");
                        Console.WriteLine($"    2 - Area of a circle");
                        Console.WriteLine($"    3 - Area of equiliteral triangle");

                        while (true)
                        {
                            Console.WriteLine($"    Choose what to calculate (1, 2, 3):");
                            if (!int.TryParse(Console.ReadLine(), out choice))
                            {
                                Console.WriteLine($"    incorrect format, try again");
                                continue;
                            }
                            break;
                        }

                        double square = r * r;

                        switch (choice)
                        {
                            case 1:
                                Console.WriteLine($"    Area if a square: {square}");
                                break;
                            case 2:
                                Console.WriteLine($"    Area of a circle: {Math.PI * square}");
                                break;
                            case 3:
                                Console.WriteLine($"    Area of a triangle: {square * Math.Sqrt(3) / 4}");
                                break;
                            default:
                                Console.WriteLine($"    Wrong choice: choose only 1, 2 or 3.");
                                break;
                        }

                        Console.WriteLine($"    Do you want to repeat the process? yes or no?");
                        string command = Console.ReadLine().ToLower();
                        if (command == "no")
                        {
                            break;
                        }
                        if (command != "no" && command != "yes")
                        {
                            Console.WriteLine($"    you should write yes or no only");
                        }
                    }

                }
                #endregion

                #region task 13
                Console.WriteLine("Task 13");
                {
                    double a;
                    int choice;
                    double b;
                    double area = 0;
                    string input;

                    while (true)
                    {
                        Console.WriteLine("\nWhich area I should calculate?:");
                        Console.WriteLine("[1] - Rectangle, [2] - Ring, [3] - Isosceles triangle\n");
                        Console.Write("Your choice: ");

                        if (!int.TryParse(Console.ReadLine(), out choice))
                        {
                            Console.WriteLine("Value has an incorrect format!");
                            return;
                        }

                        if (choice < 1 || choice > 3)
                        {
                            Console.WriteLine("You can choose olny 1, 2 or 3!");
                            return;
                        }

                        Console.Write("   Enter a (must be positive): ");
                        if (!double.TryParse(Console.ReadLine(), out a))
                        {
                            Console.WriteLine("Value has an incorrect format!");
                            return;
                        }

                        if (a < 0)
                        {
                            Console.WriteLine("Value of a must be positive!");
                            return;
                        }

                        Console.Write("   Enter b (must be positive): ");
                        if (!double.TryParse(Console.ReadLine(), out b))
                        {
                            Console.WriteLine("Value has an incorrect format!");
                            return;
                        }

                        if (b < 0)
                        {
                            Console.WriteLine("Value of a must be positive!");
                            return;
                        }

                        switch (choice)
                        {
                            case 1:
                                area = a * b;
                                break;
                            case 2:
                                if (a >= b)
                                    area = Math.PI * (a * a - b * b);
                                else
                                    area = Math.PI * (b * b - a * a);
                                break;
                            case 3:
                                if (b < a)
                                {
                                    double c = b;
                                    b = a;
                                    a = c;
                                }
                                double h = Math.Sqrt((b * b) - 0.25 * a * a);
                                area = 0.5 * a * h;
                                break;
                        }

                        Console.WriteLine($"\nArea: {Math.Round(area, 3)}\n");
                        Console.Write("Do this again? [y/n]: ");

                        input = Console.ReadLine().ToLower();
                        if (input == "n")
                            break;
                        else if (input != "y")
                        {
                            Console.WriteLine("You need to enter y or n!");
                            return;
                        }
                    }
                    #endregion


                }
            }
        }
    }
}

